basePath: /api
definitions:
  auth.authenticatePayload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.authenticateResponse:
    properties:
      jwt:
        type: string
    type: object
  auth.oauthPayload:
    properties:
      code:
        type: string
    type: object
  customtemplates.customTemplateFromFileContentPayload:
    properties:
      description:
        type: string
      fileContent:
        type: string
      logo:
        type: string
      note:
        type: string
      platform:
        type: integer
      title:
        type: string
      type:
        type: integer
    type: object
  customtemplates.customTemplateFromFileUploadPayload:
    properties:
      description:
        type: string
      fileContent:
        items:
          type: integer
        type: array
      logo:
        type: string
      note:
        type: string
      platform:
        type: integer
      title:
        type: string
      type:
        type: integer
    type: object
  customtemplates.customTemplateFromGitRepositoryPayload:
    properties:
      composeFilePathInRepository:
        type: string
      description:
        type: string
      logo:
        type: string
      note:
        type: string
      platform:
        type: integer
      repositoryAuthentication:
        type: boolean
      repositoryPassword:
        type: string
      repositoryReferenceName:
        type: string
      repositoryURL:
        type: string
      repositoryUsername:
        type: string
      title:
        type: string
      type:
        type: integer
    type: object
  customtemplates.customTemplateUpdatePayload:
    properties:
      description:
        type: string
      fileContent:
        type: string
      logo:
        type: string
      note:
        type: string
      platform:
        type: integer
      title:
        type: string
      type:
        type: integer
    type: object
  customtemplates.fileResponse:
    properties:
      fileContent:
        type: string
    type: object
  dockerhub.dockerhubUpdatePayload:
    properties:
      authentication:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  edgegroups.edgeGroupCreatePayload:
    properties:
      dynamic:
        type: boolean
      endpoints:
        items:
          type: integer
        type: array
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        items:
          type: integer
        type: array
    type: object
  edgegroups.edgeGroupUpdatePayload:
    properties:
      dynamic:
        type: boolean
      endpoints:
        items:
          type: integer
        type: array
      name:
        type: string
      partialMatch:
        type: boolean
      tagIDs:
        items:
          type: integer
        type: array
    type: object
  edgejobs.edgeJobCreateFromFileContentPayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          type: integer
        type: array
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.edgeJobCreateFromFilePayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          type: integer
        type: array
      file:
        items:
          type: integer
        type: array
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.edgeJobFileResponse:
    properties:
      FileContent:
        type: string
    type: object
  edgejobs.edgeJobUpdatePayload:
    properties:
      cronExpression:
        type: string
      endpoints:
        items:
          type: integer
        type: array
      fileContent:
        type: string
      name:
        type: string
      recurring:
        type: boolean
    type: object
  edgejobs.fileResponse:
    properties:
      FileContent:
        type: string
    type: object
  edgejobs.taskContainer:
    properties:
      EndpointId:
        type: integer
      Id:
        type: string
      LogsStatus:
        type: integer
    type: object
  edgestacks.stackFileResponse:
    properties:
      StackFileContent:
        type: string
    type: object
  edgestacks.swarmStackFromFileContentPayload:
    properties:
      edgeGroups:
        items:
          type: integer
        type: array
      name:
        type: string
      stackFileContent:
        type: string
    type: object
  edgestacks.swarmStackFromFileUploadPayload:
    properties:
      edgeGroups:
        items:
          type: integer
        type: array
      name:
        type: string
      stackFileContent:
        items:
          type: integer
        type: array
    type: object
  edgestacks.swarmStackFromGitRepositoryPayload:
    properties:
      composeFilePathInRepository:
        type: string
      edgeGroups:
        items:
          type: integer
        type: array
      name:
        type: string
      repositoryAuthentication:
        type: boolean
      repositoryPassword:
        type: string
      repositoryReferenceName:
        type: string
      repositoryURL:
        type: string
      repositoryUsername:
        type: string
    type: object
  edgestacks.updateEdgeStackPayload:
    properties:
      edgeGroups:
        items:
          type: integer
        type: array
      prune:
        type: boolean
      stackFileContent:
        type: string
      version:
        type: integer
    type: object
  endpointedge.configResponse:
    properties:
      name:
        type: string
      prune:
        type: boolean
      stackFileContent:
        type: string
    type: object
  endpointgroups.endpointGroupCreatePayload:
    properties:
      associatedEndpoints:
        items:
          type: integer
        type: array
      description:
        type: string
      name:
        type: string
      tagIDs:
        items:
          type: integer
        type: array
    type: object
  endpoints.edgeJobResponse:
    properties:
      CollectLogs:
        type: boolean
      CronExpression:
        type: string
      Id:
        type: integer
      Script:
        type: string
      Version:
        type: integer
    type: object
  endpoints.endpointCreatePayload:
    properties:
      azureApplicationID:
        type: string
      azureAuthenticationKey:
        type: string
      azureTenantID:
        type: string
      edgeCheckinInterval:
        type: integer
      endpointCreationType:
        type: integer
      groupID:
        type: integer
      name:
        type: string
      publicURL:
        type: string
      tagIDs:
        items:
          type: integer
        type: array
      tls:
        type: boolean
      tlscacertFile:
        items:
          type: integer
        type: array
      tlscertFile:
        items:
          type: integer
        type: array
      tlskeyFile:
        items:
          type: integer
        type: array
      tlsskipClientVerify:
        type: boolean
      tlsskipVerify:
        type: boolean
      url:
        type: string
    type: object
  endpoints.endpointExtensionAddPayload:
    properties:
      type:
        type: integer
      url:
        type: string
    type: object
  endpoints.endpointStatusInspectResponse:
    properties:
      checkin:
        type: integer
      credentials:
        type: string
      port:
        type: integer
      schedules:
        items:
          $ref: '#/definitions/endpoints.edgeJobResponse'
        type: array
      stacks:
        items:
          $ref: '#/definitions/endpoints.stackStatusResponse'
        type: array
      status:
        type: string
    type: object
  endpoints.stackStatusResponse:
    properties:
      id:
        type: integer
      version:
        type: integer
    type: object
  motd.motdResponse:
    properties:
      ContentLayout:
        additionalProperties:
          type: string
        type: object
      Hash:
        items:
          type: integer
        type: array
      Message:
        type: string
      Style:
        type: string
      Title:
        type: string
    type: object
  portainer.AccessPolicy:
    properties:
      RoleId:
        type: integer
    type: object
  portainer.Authorizations:
    additionalProperties:
      type: boolean
    type: object
  portainer.AzureCredentials:
    properties:
      ApplicationID:
        type: string
      AuthenticationKey:
        type: string
      TenantID:
        type: string
    type: object
  portainer.CustomTemplate:
    properties:
      CreatedByUserId:
        type: integer
      Description:
        type: string
      EntryPoint:
        type: string
      Id:
        type: integer
      Logo:
        type: string
      Note:
        type: string
      Platform:
        type: integer
      ProjectPath:
        type: string
      ResourceControl:
        $ref: '#/definitions/portainer.ResourceControl'
      Title:
        type: string
      Type:
        type: integer
    type: object
  portainer.DockerHub:
    properties:
      Authentication:
        type: boolean
      Password:
        type: string
      Username:
        type: string
    type: object
  portainer.DockerSnapshot:
    properties:
      DockerSnapshotRaw:
        $ref: '#/definitions/portainer.DockerSnapshotRaw'
      DockerVersion:
        type: string
      HealthyContainerCount:
        type: integer
      ImageCount:
        type: integer
      RunningContainerCount:
        type: integer
      ServiceCount:
        type: integer
      StackCount:
        type: integer
      StoppedContainerCount:
        type: integer
      Swarm:
        type: boolean
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
      UnhealthyContainerCount:
        type: integer
      VolumeCount:
        type: integer
    type: object
  portainer.DockerSnapshotRaw:
    properties:
      Containers:
        type: object
      Images:
        type: object
      Info:
        type: object
      Networks:
        type: object
      Version:
        type: object
      Volumes:
        type: object
    type: object
  portainer.EdgeGroup:
    properties:
      Dynamic:
        type: boolean
      Endpoints:
        items:
          type: integer
        type: array
      Id:
        type: integer
      Name:
        type: string
      PartialMatch:
        type: boolean
      TagIds:
        items:
          type: integer
        type: array
    type: object
  portainer.EdgeJob:
    properties:
      Created:
        type: integer
      CronExpression:
        type: string
      Endpoints:
        additionalProperties:
          $ref: '#/definitions/portainer.EdgeJobEndpointMeta'
        type: object
      Id:
        type: integer
      Name:
        type: string
      Recurring:
        type: boolean
      ScriptPath:
        type: string
      Version:
        type: integer
    type: object
  portainer.EdgeJobEndpointMeta:
    properties:
      collectLogs:
        type: boolean
      logsStatus:
        type: integer
    type: object
  portainer.EdgeStack:
    properties:
      CreationDate:
        type: integer
      EdgeGroups:
        items:
          type: integer
        type: array
      EntryPoint:
        type: string
      Id:
        type: integer
      Name:
        type: string
      ProjectPath:
        type: string
      Prune:
        type: boolean
      Status:
        additionalProperties:
          $ref: '#/definitions/portainer.EdgeStackStatus'
        type: object
      Version:
        type: integer
    type: object
  portainer.EdgeStackStatus:
    properties:
      EndpointID:
        type: integer
      Error:
        type: string
      Type:
        type: integer
    type: object
  portainer.Endpoint:
    properties:
      AuthorizedTeams:
        items:
          type: integer
        type: array
      AuthorizedUsers:
        description: Deprecated in DBVersion == 18
        items:
          type: integer
        type: array
      AzureCredentials:
        $ref: '#/definitions/portainer.AzureCredentials'
      EdgeCheckinInterval:
        type: integer
      EdgeID:
        type: string
      EdgeKey:
        type: string
      Extensions:
        items:
          $ref: '#/definitions/portainer.EndpointExtension'
        type: array
      GroupId:
        type: integer
      Id:
        type: integer
      Kubernetes:
        $ref: '#/definitions/portainer.KubernetesData'
      Name:
        type: string
      PublicURL:
        type: string
      Snapshots:
        items:
          $ref: '#/definitions/portainer.DockerSnapshot'
        type: array
      Status:
        type: integer
      TLS:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 4
        type: boolean
      TLSCACert:
        type: string
      TLSCert:
        type: string
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      TLSKey:
        type: string
      TagIds:
        items:
          type: integer
        type: array
      Tags:
        description: Deprecated in DBVersion == 22
        items:
          type: string
        type: array
      TeamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      Type:
        type: integer
      URL:
        type: string
      UserAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
    type: object
  portainer.EndpointAuthorizations:
    additionalProperties:
      $ref: '#/definitions/portainer.Authorizations'
    type: object
  portainer.EndpointExtension:
    properties:
      Type:
        type: integer
      URL:
        type: string
    type: object
  portainer.EndpointGroup:
    properties:
      AuthorizedTeams:
        items:
          type: integer
        type: array
      AuthorizedUsers:
        description: Deprecated in DBVersion == 18
        items:
          type: integer
        type: array
      Description:
        type: string
      Id:
        type: integer
      Labels:
        description: Deprecated fields
        items:
          $ref: '#/definitions/portainer.Pair'
        type: array
      Name:
        type: string
      TagIds:
        items:
          type: integer
        type: array
      Tags:
        description: Deprecated in DBVersion == 22
        items:
          type: string
        type: array
      TeamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      UserAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
    type: object
  portainer.GitlabRegistryData:
    properties:
      InstanceURL:
        type: string
      ProjectId:
        type: integer
      ProjectPath:
        type: string
    type: object
  portainer.KubernetesConfiguration:
    properties:
      IngressClasses:
        items:
          $ref: '#/definitions/portainer.KubernetesIngressClassConfig'
        type: array
      StorageClasses:
        items:
          $ref: '#/definitions/portainer.KubernetesStorageClassConfig'
        type: array
      UseLoadBalancer:
        type: boolean
      UseServerMetrics:
        type: boolean
    type: object
  portainer.KubernetesData:
    properties:
      Configuration:
        $ref: '#/definitions/portainer.KubernetesConfiguration'
      Snapshots:
        items:
          $ref: '#/definitions/portainer.KubernetesSnapshot'
        type: array
    type: object
  portainer.KubernetesIngressClassConfig:
    properties:
      Name:
        type: string
      Type:
        type: string
    type: object
  portainer.KubernetesSnapshot:
    properties:
      KubernetesVersion:
        type: string
      NodeCount:
        type: integer
      Time:
        type: integer
      TotalCPU:
        type: integer
      TotalMemory:
        type: integer
    type: object
  portainer.KubernetesStorageClassConfig:
    properties:
      AccessModes:
        items:
          type: string
        type: array
      AllowVolumeExpansion:
        type: boolean
      Name:
        type: string
      Provisioner:
        type: string
    type: object
  portainer.LDAPGroupSearchSettings:
    properties:
      GroupAttribute:
        type: string
      GroupBaseDN:
        type: string
      GroupFilter:
        type: string
    type: object
  portainer.LDAPSearchSettings:
    properties:
      BaseDN:
        type: string
      Filter:
        type: string
      UserNameAttribute:
        type: string
    type: object
  portainer.LDAPSettings:
    properties:
      AnonymousMode:
        type: boolean
      AutoCreateUsers:
        type: boolean
      GroupSearchSettings:
        items:
          $ref: '#/definitions/portainer.LDAPGroupSearchSettings'
        type: array
      Password:
        type: string
      ReaderDN:
        type: string
      SearchSettings:
        items:
          $ref: '#/definitions/portainer.LDAPSearchSettings'
        type: array
      StartTLS:
        type: boolean
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      URL:
        type: string
    type: object
  portainer.OAuthSettings:
    properties:
      AccessTokenURI:
        type: string
      AuthorizationURI:
        type: string
      ClientID:
        type: string
      ClientSecret:
        type: string
      DefaultTeamID:
        type: integer
      OAuthAutoCreateUsers:
        type: boolean
      RedirectURI:
        type: string
      ResourceURI:
        type: string
      Scopes:
        type: string
      UserIdentifier:
        type: string
    type: object
  portainer.Pair:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  portainer.Registry:
    properties:
      Authentication:
        type: boolean
      AuthorizedTeams:
        items:
          type: integer
        type: array
      AuthorizedUsers:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 18
        items:
          type: integer
        type: array
      Gitlab:
        $ref: '#/definitions/portainer.GitlabRegistryData'
      Id:
        type: integer
      ManagementConfiguration:
        $ref: '#/definitions/portainer.RegistryManagementConfiguration'
      Name:
        type: string
      Password:
        type: string
      TeamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      Type:
        type: integer
      URL:
        type: string
      UserAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
      Username:
        type: string
    type: object
  portainer.RegistryManagementConfiguration:
    properties:
      Authentication:
        type: boolean
      Password:
        type: string
      TLSConfig:
        $ref: '#/definitions/portainer.TLSConfiguration'
      Type:
        type: integer
      Username:
        type: string
    type: object
  portainer.ResourceControl:
    properties:
      AccessLevel:
        type: integer
      AdministratorsOnly:
        type: boolean
      Id:
        type: integer
      OwnerId:
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 2
        type: integer
      Public:
        type: boolean
      ResourceId:
        type: string
      SubResourceIds:
        items:
          type: string
        type: array
      System:
        type: boolean
      TeamAccesses:
        items:
          $ref: '#/definitions/portainer.TeamResourceAccess'
        type: array
      Type:
        type: integer
      UserAccesses:
        items:
          $ref: '#/definitions/portainer.UserResourceAccess'
        type: array
    type: object
  portainer.Role:
    properties:
      Authorizations:
        $ref: '#/definitions/portainer.Authorizations'
      Description:
        type: string
      Id:
        type: integer
      Name:
        type: string
      Priority:
        type: integer
    type: object
  portainer.Settings:
    properties:
      AllowBindMountsForRegularUsers:
        type: boolean
      AllowContainerCapabilitiesForRegularUsers:
        type: boolean
      AllowDeviceMappingForRegularUsers:
        type: boolean
      AllowHostNamespaceForRegularUsers:
        type: boolean
      AllowPrivilegedModeForRegularUsers:
        type: boolean
      AllowStackManagementForRegularUsers:
        type: boolean
      AllowVolumeBrowserForRegularUsers:
        type: boolean
      AuthenticationMethod:
        type: integer
      BlackListedLabels:
        items:
          $ref: '#/definitions/portainer.Pair'
        type: array
      EdgeAgentCheckinInterval:
        type: integer
      EnableEdgeComputeFeatures:
        type: boolean
      EnableHostManagementFeatures:
        type: boolean
      EnableTelemetry:
        type: boolean
      LDAPSettings:
        $ref: '#/definitions/portainer.LDAPSettings'
      LogoURL:
        type: string
      OAuthSettings:
        $ref: '#/definitions/portainer.OAuthSettings'
      SnapshotInterval:
        type: string
      TemplatesURL:
        type: string
      UserSessionTimeout:
        type: string
      displayDonationHeader:
        description: Deprecated fields
        type: boolean
      displayExternalContributors:
        type: boolean
    type: object
  portainer.Status:
    properties:
      Version:
        type: string
    type: object
  portainer.TLSConfiguration:
    properties:
      TLS:
        type: boolean
      TLSCACert:
        type: string
      TLSCert:
        type: string
      TLSKey:
        type: string
      TLSSkipVerify:
        type: boolean
    type: object
  portainer.Tag:
    properties:
      EndpointGroups:
        additionalProperties:
          type: boolean
        type: object
      Endpoints:
        additionalProperties:
          type: boolean
        type: object
      Name:
        type: string
      id:
        type: integer
    type: object
  portainer.Team:
    properties:
      Id:
        type: integer
      Name:
        type: string
    type: object
  portainer.TeamAccessPolicies:
    additionalProperties:
      $ref: '#/definitions/portainer.AccessPolicy'
    type: object
  portainer.TeamMembership:
    properties:
      Id:
        type: integer
      Role:
        type: integer
      TeamID:
        type: integer
      UserID:
        type: integer
    type: object
  portainer.TeamResourceAccess:
    properties:
      AccessLevel:
        type: integer
      TeamId:
        type: integer
    type: object
  portainer.Template:
    properties:
      Id:
        description: Mandatory container/stack fields
        type: integer
      administrator_only:
        type: boolean
      categories:
        items:
          type: string
        type: array
      command:
        type: string
      description:
        type: string
      env:
        items:
          $ref: '#/definitions/portainer.TemplateEnv'
        type: array
      hostname:
        type: string
      image:
        description: Mandatory container fields
        type: string
      interactive:
        type: boolean
      labels:
        items:
          $ref: '#/definitions/portainer.Pair'
        type: array
      logo:
        type: string
      name:
        description: Optional stack/container fields
        type: string
      network:
        type: string
      note:
        type: string
      platform:
        type: string
      ports:
        items:
          type: string
        type: array
      privileged:
        type: boolean
      registry:
        description: Optional container fields
        type: string
      repository:
        $ref: '#/definitions/portainer.TemplateRepository'
        description: Mandatory stack fields
      restart_policy:
        type: string
      stackFile:
        description: Mandatory Edge stack fields
        type: string
      title:
        type: string
      type:
        type: integer
      volumes:
        items:
          $ref: '#/definitions/portainer.TemplateVolume'
        type: array
    type: object
  portainer.TemplateEnv:
    properties:
      default:
        type: string
      description:
        type: string
      label:
        type: string
      name:
        type: string
      preset:
        type: boolean
      select:
        items:
          $ref: '#/definitions/portainer.TemplateEnvSelect'
        type: array
    type: object
  portainer.TemplateEnvSelect:
    properties:
      default:
        type: boolean
      text:
        type: string
      value:
        type: string
    type: object
  portainer.TemplateRepository:
    properties:
      stackfile:
        type: string
      url:
        type: string
    type: object
  portainer.TemplateVolume:
    properties:
      bind:
        type: string
      container:
        type: string
      readonly:
        type: boolean
    type: object
  portainer.User:
    properties:
      EndpointAuthorizations:
        $ref: '#/definitions/portainer.EndpointAuthorizations'
      Id:
        type: integer
      Password:
        type: string
      PortainerAuthorizations:
        $ref: '#/definitions/portainer.Authorizations'
        description: |-
          Deprecated fields
          Deprecated in DBVersion == 25
      Role:
        type: integer
      Username:
        type: string
    type: object
  portainer.UserAccessPolicies:
    additionalProperties:
      $ref: '#/definitions/portainer.AccessPolicy'
    type: object
  portainer.UserResourceAccess:
    properties:
      AccessLevel:
        type: integer
      UserId:
        type: integer
    type: object
  registries.registryConfigurePayload:
    properties:
      authentication:
        type: boolean
      password:
        type: string
      tls:
        type: boolean
      tlscacertFile:
        items:
          type: integer
        type: array
      tlscertFile:
        items:
          type: integer
        type: array
      tlskeyFile:
        items:
          type: integer
        type: array
      tlsskipVerify:
        type: boolean
      username:
        type: string
    type: object
  registries.registryCreatePayload:
    properties:
      authentication:
        type: boolean
      gitlab:
        $ref: '#/definitions/portainer.GitlabRegistryData'
      name:
        type: string
      password:
        type: string
      type:
        type: integer
      url:
        type: string
      username:
        type: string
    type: object
  registries.registryUpdatePayload:
    properties:
      authentication:
        type: boolean
      name:
        type: string
      password:
        type: string
      teamAccessPolicies:
        $ref: '#/definitions/portainer.TeamAccessPolicies'
      url:
        type: string
      userAccessPolicies:
        $ref: '#/definitions/portainer.UserAccessPolicies'
      username:
        type: string
    type: object
  resourcecontrols.resourceControlCreatePayload:
    properties:
      administratorsOnly:
        type: boolean
      public:
        type: boolean
      resourceID:
        type: string
      subResourceIDs:
        items:
          type: string
        type: array
      teams:
        items:
          type: integer
        type: array
      type:
        type: string
      users:
        items:
          type: integer
        type: array
    type: object
  resourcecontrols.resourceControlUpdatePayload:
    properties:
      administratorsOnly:
        type: boolean
      public:
        type: boolean
      teams:
        items:
          type: integer
        type: array
      users:
        items:
          type: integer
        type: array
    type: object
  settings.publicSettingsResponse:
    properties:
      AllowBindMountsForRegularUsers:
        type: boolean
      AllowContainerCapabilitiesForRegularUsers:
        type: boolean
      AllowDeviceMappingForRegularUsers:
        type: boolean
      AllowHostNamespaceForRegularUsers:
        type: boolean
      AllowPrivilegedModeForRegularUsers:
        type: boolean
      AllowStackManagementForRegularUsers:
        type: boolean
      AllowVolumeBrowserForRegularUsers:
        type: boolean
      AuthenticationMethod:
        type: integer
      EnableEdgeComputeFeatures:
        type: boolean
      EnableHostManagementFeatures:
        type: boolean
      EnableTelemetry:
        type: boolean
      LogoURL:
        type: string
      OAuthLoginURI:
        type: string
    type: object
  settings.settingsLDAPCheckPayload:
    properties:
      ldapsettings:
        $ref: '#/definitions/portainer.LDAPSettings'
    type: object
  settings.settingsUpdatePayload:
    properties:
      allowBindMountsForRegularUsers:
        type: boolean
      allowContainerCapabilitiesForRegularUsers:
        type: boolean
      allowDeviceMappingForRegularUsers:
        type: boolean
      allowHostNamespaceForRegularUsers:
        type: boolean
      allowPrivilegedModeForRegularUsers:
        type: boolean
      allowStackManagementForRegularUsers:
        type: boolean
      allowVolumeBrowserForRegularUsers:
        type: boolean
      authenticationMethod:
        type: integer
      blackListedLabels:
        items:
          $ref: '#/definitions/portainer.Pair'
        type: array
      edgeAgentCheckinInterval:
        type: integer
      enableEdgeComputeFeatures:
        type: boolean
      enableHostManagementFeatures:
        type: boolean
      enableTelemetry:
        type: boolean
      ldapsettings:
        $ref: '#/definitions/portainer.LDAPSettings'
      logoURL:
        type: string
      oauthSettings:
        $ref: '#/definitions/portainer.OAuthSettings'
      snapshotInterval:
        type: string
      templatesURL:
        type: string
      userSessionTimeout:
        type: string
    type: object
  status.inspectVersionResponse:
    properties:
      LatestVersion:
        type: string
      UpdateAvailable:
        type: boolean
    type: object
  tags.tagCreatePayload:
    properties:
      name:
        type: string
    type: object
  teammemberships.teamMembershipCreatePayload:
    properties:
      role:
        type: integer
      teamID:
        type: integer
      userID:
        type: integer
    type: object
  teammemberships.teamMembershipUpdatePayload:
    properties:
      role:
        type: integer
      teamID:
        type: integer
      userID:
        type: integer
    type: object
  teams.teamCreatePayload:
    properties:
      name:
        type: string
    type: object
  teams.teamUpdatePayload:
    properties:
      name:
        type: string
    type: object
  templates.filePayload:
    properties:
      composeFilePathInRepository:
        type: string
      repositoryURL:
        type: string
    type: object
  templates.fileResponse:
    properties:
      fileContent:
        type: string
    type: object
  templates.listResponse:
    properties:
      templates:
        items:
          $ref: '#/definitions/portainer.Template'
        type: array
      version:
        type: string
    type: object
  users.adminInitPayload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  users.userCreatePayload:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  users.userUpdatePasswordPayload:
    properties:
      newPassword:
        type: string
      password:
        type: string
    type: object
  users.userUpdatePayload:
    properties:
      password:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  license: {}
  title: PortainerCE
  version: "2.0"
paths:
  /api/endpoint_groups:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint group
          schema:
            items:
              $ref: '#/definitions/portainer.EndpointGroup'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List Endpoint groups
      tags:
      - EndpointGroups
  /api/endpoint_groups/:id:
    get:
      consumes:
      - application/json
      parameters:
      - description: endpoint group id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint group
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect an Endpoint group
      tags:
      - EndpointGroups
    put:
      consumes:
      - application/json
      parameters:
      - description: endpoint group id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint group
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update Endpoint group
      tags:
      - EndpointGroups
  /api/endpoints/{id}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: Endpoint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpoints.endpointStatusInspectResponse'
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get endpoint status (for edge)
      tags:
      - Endpoints
      - Edge
  /api/endpoints/snapshot:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Snapshot all endpoints
      tags:
      - Endpoints
  /auth:
    post:
      consumes:
      - application/json
      operationId: authenticate
      parameters:
      - description: username and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.authenticatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
      summary: Authenticate
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "204":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - auth
  /auth/oauth/validate:
    post:
      consumes:
      - application/json
      operationId: authenticate_oauth
      parameters:
      - description: OAuth code
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.oauthPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            $ref: '#/definitions/auth.authenticateResponse'
      summary: Authenticate with OAuth
      tags:
      - auth
  /custom_templates:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.CustomTemplate'
            type: array
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Gets a list of custom templates
      tags:
      - CustomTemplates
    post:
      consumes:
      - application/json
      parameters:
      - description: method for creating template
        enum:
        - string
        - file
        - repository
        in: query
        name: method
        required: true
        type: string
      - description: Required when using method=string
        in: body
        name: body_string
        required: true
        schema:
          $ref: '#/definitions/customtemplates.customTemplateFromFileContentPayload'
      - description: Required when using method=file
        in: body
        name: body_file
        required: true
        schema:
          $ref: '#/definitions/customtemplates.customTemplateFromFileUploadPayload'
      - description: Required when using method=repository
        in: body
        name: body_repository
        required: true
        schema:
          $ref: '#/definitions/customtemplates.customTemplateFromGitRepositoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create a custom template
      tags:
      - CustomTemplates
  /custom_templates/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete a custom template
      tags:
      - CustomTemplates
    get:
      consumes:
      - application/json
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Gets a custom template
      tags:
      - CustomTemplates
    put:
      consumes:
      - application/json
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      - description: Update data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/customtemplates.customTemplateUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.CustomTemplate'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates a custom template
      tags:
      - CustomTemplates
  /custom_templates/{id}/file:
    get:
      consumes:
      - application/json
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customtemplates.fileResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Gets a custom template's file
      tags:
      - CustomTemplates
  /dockerhub:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.DockerHub'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Gets the dockerhub settings
      tags:
      - DockerHub
    put:
      consumes:
      - application/json
      parameters:
      - description: DockerHub settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dockerhub.dockerhubUpdatePayload'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates the dockerhub settings
      tags:
      - DockerHub
  /edge_groups:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: EdgeGroups
          schema:
            items:
              allOf:
              - $ref: '#/definitions/portainer.EdgeGroup'
              - properties:
                  HasEdgeStack:
                    type: boolean
                type: object
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: list EdgeGroups
      tags:
      - EdgeGroups
    post:
      consumes:
      - application/json
      parameters:
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgegroups.edgeGroupCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create an EdgeGroup
      tags:
      - EdgeGroups
  /edge_groups/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Deletes an EdgeGroup
      tags:
      - EdgeGroups
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspects an EdgeGroup
      tags:
      - EdgeGroups
    put:
      consumes:
      - application/json
      parameters:
      - description: EdgeGroup Id
        in: path
        name: id
        required: true
        type: integer
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgegroups.edgeGroupUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates an EdgeGroup
      tags:
      - EdgeGroups
  /edge_jobs:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.EdgeJob'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetch EdgeJobs list
      tags:
      - EdgeJobs
    post:
      consumes:
      - application/json
      parameters:
      - description: Creation Method
        enum:
        - file
        - string
        in: query
        name: method
        required: true
        type: string
      - description: EdgeGroup data when method is string
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobCreateFromFileContentPayload'
      - description: EdgeGroup data when method is file
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobCreateFromFilePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeGroup'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create an EdgeJob
      tags:
      - EdgeJobs
  /edge_jobs/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete an EdgeJob
      tags:
      - EdgeJobs
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeJob'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect an EdgeJob
      tags:
      - EdgeJobs
    post:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeGroup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgejobs.edgeJobUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeJob'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update an EdgeJob
      tags:
      - EdgeJobs
  /edge_jobs/{id}/file:
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.edgeJobFileResponse'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetch a file of an EdgeJob
      tags:
      - EdgeJobs
  /edge_jobs/{id}/tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/edgejobs.taskContainer'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetch the list of tasks on an EdgeJob
      tags:
      - EdgeJobs
  /edge_jobs/{id}/tasks/{taskID}/logs:
    delete:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Clear the log for a specifc task on an EdgeJob
      tags:
      - EdgeJobs
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgejobs.fileResponse'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetch the log for a specifc task on an EdgeJob
      tags:
      - EdgeJobs
    post:
      consumes:
      - application/json
      parameters:
      - description: EdgeJob Id
        in: path
        name: id
        required: true
        type: string
      - description: Task Id
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Collect the log for a specifc task on an EdgeJob
      tags:
      - EdgeJobs
  /edge_stacks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.EdgeStack'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetches the list of EdgeStacks
      tags:
      - EdgeStacks
    post:
      consumes:
      - application/json
      parameters:
      - description: Creation Method
        enum:
        - file
        - string
        - repository
        in: query
        name: method
        required: true
        type: string
      - description: Required when using method=string
        in: body
        name: body_string
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromFileContentPayload'
      - description: Required when using method=file
        in: body
        name: body_file
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromFileUploadPayload'
      - description: Required when using method=repository
        in: body
        name: body_repository
        required: true
        schema:
          $ref: '#/definitions/edgestacks.swarmStackFromGitRepositoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create an EdgeStack
      tags:
      - EdgeStacks
  /edge_stacks/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete an EdgeStack
      tags:
      - EdgeStacks
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect an EdgeStack
      tags:
      - EdgeStacks
    put:
      consumes:
      - application/json
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeStack data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/edgestacks.updateEdgeStackPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.EdgeStack'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update an EdgeStack
      tags:
      - EdgeStacks
  /edge_stacks/{id}/file:
    get:
      consumes:
      - application/json
      parameters:
      - description: EdgeStack Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/edgestacks.stackFileResponse'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetches the stack file for an EdgeStack
      tags:
      - EdgeStacks
  /edgetemplates:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.Template'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetches the list of Edge Templates
      tags:
      - EdgeTemplates
  /endpoint_groups:
    post:
      consumes:
      - application/json
      parameters:
      - description: endpoint group data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpointgroups.endpointGroupCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint group
          schema:
            $ref: '#/definitions/portainer.EndpointGroup'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Creates an Endpoint Group
      tags:
      - EndpointGroups
  /endpoint_groups/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Endpoint Group Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Deletes an Endpoint Group
      tags:
      - EndpointGroups
  /endpoint_groups/{id}/endpoints/{endpointId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: endpoint group id
        in: path
        name: id
        required: true
        type: integer
      - description: endpoint id
        in: path
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Removes endpoint from an endpoint group
      tags:
      - EndpointGroups
    post:
      consumes:
      - application/json
      parameters:
      - description: endpoint group id
        in: path
        name: id
        required: true
        type: integer
      - description: endpoint id
        in: path
        name: endpointId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Attach an endpoint to an endpoint group
      tags:
      - EndpointGroups
  /endpoints:
    get:
      consumes:
      - application/json
      parameters:
      - description: Start searching from
        in: query
        name: start
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      - description: List endpoints of this group
        in: query
        name: groupId
        type: integer
      - description: Limit results to this value
        in: query
        name: limit
        type: integer
      - description: List endpoints of this type
        in: query
        name: type
        type: integer
      - description: search endpoints with these tags (depends on tagsPartialMatch)
        in: query
        items:
          type: integer
        name: tagIds
        type: array
      - description: If true, will return endpoint which has one of tagIds, if false
          (or missing) will return only endpoints that has all the tags
        in: query
        name: tagsPartialMatch
        type: boolean
      - description: will return only these endpoints
        in: query
        items:
          type: integer
        name: endpointIds
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Endpoints
          schema:
            items:
              $ref: '#/definitions/portainer.Endpoint'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List endpoints
      tags:
      - Endpoints
    post:
      consumes:
      - application/json
      parameters:
      - description: endpoint data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.endpointCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Creates an endpoint
      tags:
      - Endpoints
  /endpoints/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Deletes an endpoint
      tags:
      - Endpoints
    get:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspects an endpoint
      tags:
      - Endpoints
    put:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint
          schema:
            $ref: '#/definitions/portainer.Endpoint'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates an endpoint
      tags:
      - Endpoints
  /endpoints/{id}/edge/jobs/{jobID}/logs:
    post:
      consumes:
      - application/json
      parameters:
      - description: Endpoint Id
        in: path
        name: id
        required: true
        type: string
      - description: Job Id
        in: path
        name: jobID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect an EdgeJob Log
      tags:
      - Edge
      - Endpoints
  /endpoints/{id}/edge/stacks/{stackId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Endpoint Id
        in: path
        name: id
        required: true
        type: string
      - description: EdgeStack Id
        in: path
        name: stackID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/endpointedge.configResponse'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect an Edge Stack for an Endpoint
      tags:
      - Edge
      - Endpoints
      - EdgeStacks
  /endpoints/{id}/extensions:
    post:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      - description: data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/endpoints.endpointExtensionAddPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint Extension
          schema:
            $ref: '#/definitions/portainer.EndpointExtension'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Add an extension to an Endpoint
      tags:
      - Endpoints
  /endpoints/{id}/extensions/{extensionType}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      - description: extension type
        in: path
        name: extensionType
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Endpoint Extension
          schema:
            $ref: '#/definitions/portainer.EndpointExtension'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Removes an extension to an Endpoint
      tags:
      - Endpoints
  /endpoints/{id}/snapshot:
    post:
      consumes:
      - application/json
      parameters:
      - description: endpoint id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Snapshots an endpoint
      tags:
      - Endpoints
  /motd:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/motd.motdResponse'
      security:
      - ApiKeyAuth: []
      summary: fetches the message of the day
      tags:
      - MOTD
  /registries:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Registry
          schema:
            items:
              $ref: '#/definitions/portainer.Registry'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List Registries
      tags:
      - Registries
    post:
      consumes:
      - application/json
      parameters:
      - description: registry data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Registry
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Creates a registry
      tags:
      - Registries
  /registries/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: registry id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Deletes a registry
      tags:
      - Registries
    get:
      consumes:
      - application/json
      parameters:
      - description: registry id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspects a registry
      tags:
      - Registries
    put:
      consumes:
      - application/json
      parameters:
      - description: registry id
        in: path
        name: id
        required: true
        type: integer
      - description: registry data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.Registry'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates a registry
      tags:
      - Registries
  /registries/{id}/configure:
    post:
      consumes:
      - application/json
      parameters:
      - description: registry id
        in: path
        name: id
        required: true
        type: integer
      - description: registry configurations
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/registries.registryConfigurePayload'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Configures a registry
      tags:
      - Registries
  /resource_controls:
    post:
      consumes:
      - application/json
      parameters:
      - description: resource control data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resourcecontrols.resourceControlCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Resource Control
          schema:
            $ref: '#/definitions/portainer.ResourceControl'
        "400":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Creates a resource control object
      tags:
      - ResourceControl
  /resource_controls/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Resource control Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Deletes a resource control object
      tags:
      - ResourceControl
    put:
      consumes:
      - application/json
      parameters:
      - description: Resource control Id
        in: path
        name: id
        required: true
        type: integer
      - description: resource control data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resourcecontrols.resourceControlUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Resource Control
          schema:
            $ref: '#/definitions/portainer.ResourceControl'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Updates a resource control object
      tags:
      - ResourceControl
  /roles:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Roles
          schema:
            items:
              $ref: '#/definitions/portainer.Role'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List Roles
      tags:
      - Roles
  /settings:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Settings
          schema:
            $ref: '#/definitions/portainer.Settings'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect Settings
      tags:
      - Settings
    put:
      consumes:
      - application/json
      parameters:
      - description: settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/settings.settingsUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Settings
          schema:
            $ref: '#/definitions/portainer.Settings'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update Settings
      tags:
      - Settings
  /settings/ldap/check:
    put:
      consumes:
      - application/json
      parameters:
      - description: ldap settings
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/settings.settingsLDAPCheckPayload'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Check LDAP Connection
      tags:
      - Settings
  /settings/public:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Settings
          schema:
            $ref: '#/definitions/settings.publicSettingsResponse'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect Public Settings
      tags:
      - Settings
  /status:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Status info
          schema:
            $ref: '#/definitions/portainer.Status'
        "500":
          description: ""
      summary: Inspect Status
      tags:
      - Status
  /status/version:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Version info
          schema:
            $ref: '#/definitions/status.inspectVersionResponse'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect Version
      tags:
      - Status
  /tags:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.Tag'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Fetches the list of tags
      tags:
      - Tags
    post:
      parameters:
      - description: tag info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tags.tagCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.Tag'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create a tag
      tags:
      - Tags
  /tags/{id}:
    delete:
      parameters:
      - description: tag id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete a tag
      tags:
      - Tags
  /team:
    post:
      consumes:
      - application/json
      parameters:
      - description: team data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teams.teamCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Team
          schema:
            $ref: '#/definitions/portainer.Team'
        "400":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create Team
      tags:
      - Teams
  /team/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: team id
        in: path
        name: id
        required: true
        type: string
      - description: team data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teams.teamUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: Team
          schema:
            $ref: '#/definitions/portainer.Team'
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update Team
      tags:
      - Teams
  /team_memberships:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.TeamMembership'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List team memberships
      tags:
      - TeamMembership
    post:
      consumes:
      - application/json
      parameters:
      - description: membership data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teammemberships.teamMembershipCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: TeamMembership
          schema:
            $ref: '#/definitions/portainer.TeamMembership'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Add user to team
      tags:
      - TeamMembership
  /team_memberships/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: membership id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Remove user from team
      tags:
      - TeamMembership
    put:
      consumes:
      - application/json
      parameters:
      - description: membership id
        in: path
        name: id
        required: true
        type: string
      - description: membership data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/teammemberships.teamMembershipUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: TeamMembership
          schema:
            $ref: '#/definitions/portainer.TeamMembership'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update team membership
      tags:
      - TeamMembership
  /teams:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Team
          schema:
            items:
              $ref: '#/definitions/portainer.Team'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List teams
      tags:
      - Teams
  /teams/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: team id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete team
      tags:
      - Teams
    get:
      consumes:
      - application/json
      parameters:
      - description: team id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Team
          schema:
            $ref: '#/definitions/portainer.Team'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect team
      tags:
      - Teams
  /teams/{id}/memberships:
    get:
      consumes:
      - application/json
      parameters:
      - description: team id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Team memberships
          schema:
            items:
              $ref: '#/definitions/portainer.TeamMembership'
            type: array
        "400":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List team's memberships
      tags:
      - Teams
  /templates:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.listResponse'
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List templates
      tags:
      - Templates
  /templates/file:
    post:
      consumes:
      - application/json
      parameters:
      - description: File data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/templates.filePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/templates.fileResponse'
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Get a template's file
      tags:
      - Templates
  /upload/tls/{certificate}:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: certificate type
        enum:
        - ca
        - cert
        - key
        in: path
        name: certificate
        required: true
        type: string
      - description: folder name
        in: query
        name: folder
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Upload TLS file
      tags:
      - Upload
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.User'
            type: array
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: ""
        "403":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - Users
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Inspect a user
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: user password data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userUpdatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - Users
  /users/{id}/memberships:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/portainer.TeamMembership'
            type: array
        "400":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: List user's team memberships
      tags:
      - Users
  /users/{id}/passwd:
    put:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: user password data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.userUpdatePasswordPayload'
      produces:
      - application/json
      responses:
        "202":
          description: Password updated
        "400":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: Update a user's password
      tags:
      - Users
  /users/admin/check:
    get:
      consumes:
      - application/json
      description: Checks if admin user was created
      produces:
      - application/json
      responses:
        "204":
          description: Admin exists
        "404":
          description: Admin does not exist
        "500":
          description: Failed
      summary: Admin Check
      tags:
      - Users
  /users/admin/init:
    post:
      consumes:
      - application/json
      description: Creates a new admin user if not exists
      parameters:
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.adminInitPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/portainer.User'
        "400":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      summary: Create an initial admin user
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
