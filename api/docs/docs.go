// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/endpoint_groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "List Endpoint groups",
                "responses": {
                    "200": {
                        "description": "Endpoint group",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.EndpointGroup"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/endpoint_groups/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Inspect an Endpoint group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint group",
                        "schema": {
                            "$ref": "#/definitions/portainer.EndpointGroup"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Update Endpoint group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint group",
                        "schema": {
                            "$ref": "#/definitions/portainer.EndpointGroup"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/endpoints/snapshot": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Snapshot all endpoints",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/api/endpoints/{id}/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints",
                    "Edge"
                ],
                "summary": "Get endpoint status (for edge)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Endpoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.endpointStatusInspectResponse"
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate",
                "operationId": "authenticate",
                "parameters": [
                    {
                        "description": "username and password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.authenticatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "$ref": "#/definitions/auth.authenticateResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": ""
                    }
                }
            }
        },
        "/auth/oauth/validate": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate with OAuth",
                "operationId": "authenticate_oauth",
                "parameters": [
                    {
                        "description": "OAuth code",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.oauthPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "$ref": "#/definitions/auth.authenticateResponse"
                        }
                    }
                }
            }
        },
        "/custom_templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Gets a list of custom templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.CustomTemplate"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Create a custom template",
                "parameters": [
                    {
                        "enum": [
                            "string",
                            "file",
                            "repository"
                        ],
                        "type": "string",
                        "description": "method for creating template",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Required when using method=string",
                        "name": "body_string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customtemplates.customTemplateFromFileContentPayload"
                        }
                    },
                    {
                        "description": "Required when using method=file",
                        "name": "body_file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customtemplates.customTemplateFromFileUploadPayload"
                        }
                    },
                    {
                        "description": "Required when using method=repository",
                        "name": "body_repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customtemplates.customTemplateFromGitRepositoryPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.CustomTemplate"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/custom_templates/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Gets a custom template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.CustomTemplate"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Updates a custom template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customtemplates.customTemplateUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.CustomTemplate"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Delete a custom template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/custom_templates/{id}/file": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomTemplates"
                ],
                "summary": "Gets a custom template's file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customtemplates.fileResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/dockerhub": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DockerHub"
                ],
                "summary": "Gets the dockerhub settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.DockerHub"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DockerHub"
                ],
                "summary": "Updates the dockerhub settings",
                "parameters": [
                    {
                        "description": "DockerHub settings",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dockerhub.dockerhubUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeGroups"
                ],
                "summary": "list EdgeGroups",
                "responses": {
                    "200": {
                        "description": "EdgeGroups",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/portainer.EdgeGroup"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "HasEdgeStack": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeGroups"
                ],
                "summary": "Create an EdgeGroup",
                "parameters": [
                    {
                        "description": "EdgeGroup data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgegroups.edgeGroupCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeGroup"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_groups/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeGroups"
                ],
                "summary": "Inspects an EdgeGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EdgeGroup Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeGroup"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeGroups"
                ],
                "summary": "Updates an EdgeGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EdgeGroup Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EdgeGroup data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgegroups.edgeGroupUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeGroup"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeGroups"
                ],
                "summary": "Deletes an EdgeGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "EdgeGroup Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_jobs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Fetch EdgeJobs list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.EdgeJob"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Create an EdgeJob",
                "parameters": [
                    {
                        "enum": [
                            "file",
                            "string"
                        ],
                        "type": "string",
                        "description": "Creation Method",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "EdgeGroup data when method is string",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgejobs.edgeJobCreateFromFileContentPayload"
                        }
                    },
                    {
                        "description": "EdgeGroup data when method is file",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgejobs.edgeJobCreateFromFilePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeGroup"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_jobs/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Inspect an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeJob"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Update an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EdgeGroup data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgejobs.edgeJobUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeJob"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Delete an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_jobs/{id}/file": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Fetch a file of an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/edgejobs.edgeJobFileResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_jobs/{id}/tasks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Fetch the list of tasks on an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/edgejobs.taskContainer"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_jobs/{id}/tasks/{taskID}/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Fetch the log for a specifc task on an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/edgejobs.fileResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Collect the log for a specifc task on an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeJobs"
                ],
                "summary": "Clear the log for a specifc task on an EdgeJob",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeJob Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "taskID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_stacks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Fetches the list of EdgeStacks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.EdgeStack"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Create an EdgeStack",
                "parameters": [
                    {
                        "enum": [
                            "file",
                            "string",
                            "repository"
                        ],
                        "type": "string",
                        "description": "Creation Method",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Required when using method=string",
                        "name": "body_string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgestacks.swarmStackFromFileContentPayload"
                        }
                    },
                    {
                        "description": "Required when using method=file",
                        "name": "body_file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgestacks.swarmStackFromFileUploadPayload"
                        }
                    },
                    {
                        "description": "Required when using method=repository",
                        "name": "body_repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgestacks.swarmStackFromGitRepositoryPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeStack"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_stacks/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Inspect an EdgeStack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeStack Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeStack"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Update an EdgeStack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeStack Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "EdgeStack data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/edgestacks.updateEdgeStackPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.EdgeStack"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Delete an EdgeStack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeStack Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edge_stacks/{id}/file": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeStacks"
                ],
                "summary": "Fetches the stack file for an EdgeStack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "EdgeStack Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/edgestacks.stackFileResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/edgetemplates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EdgeTemplates"
                ],
                "summary": "Fetches the list of Edge Templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Template"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoint_groups": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Creates an Endpoint Group",
                "parameters": [
                    {
                        "description": "endpoint group data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpointgroups.endpointGroupCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint group",
                        "schema": {
                            "$ref": "#/definitions/portainer.EndpointGroup"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoint_groups/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Deletes an Endpoint Group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Endpoint Group Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoint_groups/{id}/endpoints/{endpointId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Attach an endpoint to an endpoint group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "endpointId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EndpointGroups"
                ],
                "summary": "Removes endpoint from an endpoint group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "endpointId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "List endpoints",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start searching from",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "List endpoints of this group",
                        "name": "groupId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit results to this value",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "List endpoints of this type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "search endpoints with these tags (depends on tagsPartialMatch)",
                        "name": "tagIds",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true, will return endpoint which has one of tagIds, if false (or missing) will return only endpoints that has all the tags",
                        "name": "tagsPartialMatch",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "will return only these endpoints",
                        "name": "endpointIds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Endpoint"
                            }
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Creates an endpoint",
                "parameters": [
                    {
                        "description": "endpoint data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.endpointCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint",
                        "schema": {
                            "$ref": "#/definitions/portainer.Endpoint"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Inspects an endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint",
                        "schema": {
                            "$ref": "#/definitions/portainer.Endpoint"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Updates an endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint",
                        "schema": {
                            "$ref": "#/definitions/portainer.Endpoint"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Deletes an endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}/edge/jobs/{jobID}/logs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Edge",
                    "Endpoints"
                ],
                "summary": "Inspect an EdgeJob Log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Job Id",
                        "name": "jobID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}/edge/stacks/{stackId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Edge",
                    "Endpoints",
                    "EdgeStacks"
                ],
                "summary": "Inspect an Edge Stack for an Endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "EdgeStack Id",
                        "name": "stackID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpointedge.configResponse"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}/extensions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Add an extension to an Endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.endpointExtensionAddPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint Extension",
                        "schema": {
                            "$ref": "#/definitions/portainer.EndpointExtension"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}/extensions/{extensionType}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Removes an extension to an Endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "extension type",
                        "name": "extensionType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Endpoint Extension",
                        "schema": {
                            "$ref": "#/definitions/portainer.EndpointExtension"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/endpoints/{id}/snapshot": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endpoints"
                ],
                "summary": "Snapshots an endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "endpoint id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/motd": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MOTD"
                ],
                "summary": "fetches the message of the day",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/motd.motdResponse"
                        }
                    }
                }
            }
        },
        "/registries": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "List Registries",
                "responses": {
                    "200": {
                        "description": "Registry",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Registry"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "Creates a registry",
                "parameters": [
                    {
                        "description": "registry data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registries.registryCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registry",
                        "schema": {
                            "$ref": "#/definitions/portainer.Registry"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/registries/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "Inspects a registry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "registry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.Registry"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "Updates a registry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "registry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "registry data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registries.registryUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portainer.Registry"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "Deletes a registry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "registry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/registries/{id}/configure": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registries"
                ],
                "summary": "Configures a registry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "registry id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "registry configurations",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/registries.registryConfigurePayload"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/resource_controls": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceControl"
                ],
                "summary": "Creates a resource control object",
                "parameters": [
                    {
                        "description": "resource control data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resourcecontrols.resourceControlCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource Control",
                        "schema": {
                            "$ref": "#/definitions/portainer.ResourceControl"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/resource_controls/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceControl"
                ],
                "summary": "Updates a resource control object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource control Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "resource control data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resourcecontrols.resourceControlUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource Control",
                        "schema": {
                            "$ref": "#/definitions/portainer.ResourceControl"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ResourceControl"
                ],
                "summary": "Deletes a resource control object",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource control Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "List Roles",
                "responses": {
                    "200": {
                        "description": "Roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Role"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Inspect Settings",
                "responses": {
                    "200": {
                        "description": "Settings",
                        "schema": {
                            "$ref": "#/definitions/portainer.Settings"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update Settings",
                "parameters": [
                    {
                        "description": "settings",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settings.settingsUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings",
                        "schema": {
                            "$ref": "#/definitions/portainer.Settings"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/settings/ldap/check": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Check LDAP Connection",
                "parameters": [
                    {
                        "description": "ldap settings",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settings.settingsLDAPCheckPayload"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/settings/public": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Inspect Public Settings",
                "responses": {
                    "200": {
                        "description": "Settings",
                        "schema": {
                            "$ref": "#/definitions/settings.publicSettingsResponse"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Inspect Status",
                "responses": {
                    "200": {
                        "description": "Status info",
                        "schema": {
                            "$ref": "#/definitions/portainer.Status"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/status/version": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "Inspect Version",
                "responses": {
                    "200": {
                        "description": "Version info",
                        "schema": {
                            "$ref": "#/definitions/status.inspectVersionResponse"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Fetches the list of tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Tag"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Create a tag",
                "parameters": [
                    {
                        "description": "tag info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tags.tagCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.Tag"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/tags/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tag id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/team_memberships": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TeamMembership"
                ],
                "summary": "List team memberships",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portainer.TeamMembership"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TeamMembership"
                ],
                "summary": "Add user to team",
                "parameters": [
                    {
                        "description": "membership data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teammemberships.teamMembershipCreatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TeamMembership",
                        "schema": {
                            "$ref": "#/definitions/portainer.TeamMembership"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/team_memberships/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TeamMembership"
                ],
                "summary": "Update team membership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "membership id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "membership data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/teammemberships.teamMembershipUpdatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TeamMembership",
                        "schema": {
                            "$ref": "#/definitions/portainer.TeamMembership"
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TeamMembership"
                ],
                "summary": "Remove user from team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "membership id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/upload/tls/{certificate}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Upload TLS file",
                "parameters": [
                    {
                        "enum": [
                            "ca",
                            "cert",
                            "key"
                        ],
                        "type": "string",
                        "description": "certificate type",
                        "name": "certificate",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "folder name",
                        "name": "folder",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.authenticatePayload": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.authenticateResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "auth.oauthPayload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "customtemplates.customTemplateFromFileContentPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileContent": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "platform": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "customtemplates.customTemplateFromFileUploadPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileContent": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "platform": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "customtemplates.customTemplateFromGitRepositoryPayload": {
            "type": "object",
            "properties": {
                "composeFilePathInRepository": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "platform": {
                    "type": "integer"
                },
                "repositoryAuthentication": {
                    "type": "boolean"
                },
                "repositoryPassword": {
                    "type": "string"
                },
                "repositoryReferenceName": {
                    "type": "string"
                },
                "repositoryURL": {
                    "type": "string"
                },
                "repositoryUsername": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "customtemplates.customTemplateUpdatePayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "fileContent": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "platform": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "customtemplates.fileResponse": {
            "type": "object",
            "properties": {
                "fileContent": {
                    "type": "string"
                }
            }
        },
        "dockerhub.dockerhubUpdatePayload": {
            "type": "object",
            "properties": {
                "authentication": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "edgegroups.edgeGroupCreatePayload": {
            "type": "object",
            "properties": {
                "dynamic": {
                    "type": "boolean"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "partialMatch": {
                    "type": "boolean"
                },
                "tagIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "edgegroups.edgeGroupUpdatePayload": {
            "type": "object",
            "properties": {
                "dynamic": {
                    "type": "boolean"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "partialMatch": {
                    "type": "boolean"
                },
                "tagIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "edgejobs.edgeJobCreateFromFileContentPayload": {
            "type": "object",
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileContent": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                }
            }
        },
        "edgejobs.edgeJobCreateFromFilePayload": {
            "type": "object",
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "file": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                }
            }
        },
        "edgejobs.edgeJobFileResponse": {
            "type": "object",
            "properties": {
                "FileContent": {
                    "type": "string"
                }
            }
        },
        "edgejobs.edgeJobUpdatePayload": {
            "type": "object",
            "properties": {
                "cronExpression": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileContent": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recurring": {
                    "type": "boolean"
                }
            }
        },
        "edgejobs.fileResponse": {
            "type": "object",
            "properties": {
                "FileContent": {
                    "type": "string"
                }
            }
        },
        "edgejobs.taskContainer": {
            "type": "object",
            "properties": {
                "EndpointId": {
                    "type": "integer"
                },
                "Id": {
                    "type": "string"
                },
                "LogsStatus": {
                    "type": "integer"
                }
            }
        },
        "edgestacks.stackFileResponse": {
            "type": "object",
            "properties": {
                "StackFileContent": {
                    "type": "string"
                }
            }
        },
        "edgestacks.swarmStackFromFileContentPayload": {
            "type": "object",
            "properties": {
                "edgeGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stackFileContent": {
                    "type": "string"
                }
            }
        },
        "edgestacks.swarmStackFromFileUploadPayload": {
            "type": "object",
            "properties": {
                "edgeGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stackFileContent": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "edgestacks.swarmStackFromGitRepositoryPayload": {
            "type": "object",
            "properties": {
                "composeFilePathInRepository": {
                    "type": "string"
                },
                "edgeGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "repositoryAuthentication": {
                    "type": "boolean"
                },
                "repositoryPassword": {
                    "type": "string"
                },
                "repositoryReferenceName": {
                    "type": "string"
                },
                "repositoryURL": {
                    "type": "string"
                },
                "repositoryUsername": {
                    "type": "string"
                }
            }
        },
        "edgestacks.updateEdgeStackPayload": {
            "type": "object",
            "properties": {
                "edgeGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "prune": {
                    "type": "boolean"
                },
                "stackFileContent": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "endpointedge.configResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "prune": {
                    "type": "boolean"
                },
                "stackFileContent": {
                    "type": "string"
                }
            }
        },
        "endpointgroups.endpointGroupCreatePayload": {
            "type": "object",
            "properties": {
                "associatedEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tagIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "endpoints.edgeJobResponse": {
            "type": "object",
            "properties": {
                "CollectLogs": {
                    "type": "boolean"
                },
                "CronExpression": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Script": {
                    "type": "string"
                },
                "Version": {
                    "type": "integer"
                }
            }
        },
        "endpoints.endpointCreatePayload": {
            "type": "object",
            "properties": {
                "azureApplicationID": {
                    "type": "string"
                },
                "azureAuthenticationKey": {
                    "type": "string"
                },
                "azureTenantID": {
                    "type": "string"
                },
                "edgeCheckinInterval": {
                    "type": "integer"
                },
                "endpointCreationType": {
                    "type": "integer"
                },
                "groupID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publicURL": {
                    "type": "string"
                },
                "tagIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tls": {
                    "type": "boolean"
                },
                "tlscacertFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlscertFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlskeyFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlsskipClientVerify": {
                    "type": "boolean"
                },
                "tlsskipVerify": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "endpoints.endpointExtensionAddPayload": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "endpoints.endpointStatusInspectResponse": {
            "type": "object",
            "properties": {
                "checkin": {
                    "type": "integer"
                },
                "credentials": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoints.edgeJobResponse"
                    }
                },
                "stacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoints.stackStatusResponse"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "endpoints.stackStatusResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "motd.motdResponse": {
            "type": "object",
            "properties": {
                "ContentLayout": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Hash": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Message": {
                    "type": "string"
                },
                "Style": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "portainer.AccessPolicy": {
            "type": "object",
            "properties": {
                "RoleId": {
                    "type": "integer"
                }
            }
        },
        "portainer.Authorizations": {
            "type": "object",
            "additionalProperties": {
                "type": "boolean"
            }
        },
        "portainer.AzureCredentials": {
            "type": "object",
            "properties": {
                "ApplicationID": {
                    "type": "string"
                },
                "AuthenticationKey": {
                    "type": "string"
                },
                "TenantID": {
                    "type": "string"
                }
            }
        },
        "portainer.CustomTemplate": {
            "type": "object",
            "properties": {
                "CreatedByUserId": {
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "EntryPoint": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Logo": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "Platform": {
                    "type": "integer"
                },
                "ProjectPath": {
                    "type": "string"
                },
                "ResourceControl": {
                    "$ref": "#/definitions/portainer.ResourceControl"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "type": "integer"
                }
            }
        },
        "portainer.DockerHub": {
            "type": "object",
            "properties": {
                "Authentication": {
                    "type": "boolean"
                },
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "portainer.DockerSnapshot": {
            "type": "object",
            "properties": {
                "DockerSnapshotRaw": {
                    "$ref": "#/definitions/portainer.DockerSnapshotRaw"
                },
                "DockerVersion": {
                    "type": "string"
                },
                "HealthyContainerCount": {
                    "type": "integer"
                },
                "ImageCount": {
                    "type": "integer"
                },
                "RunningContainerCount": {
                    "type": "integer"
                },
                "ServiceCount": {
                    "type": "integer"
                },
                "StackCount": {
                    "type": "integer"
                },
                "StoppedContainerCount": {
                    "type": "integer"
                },
                "Swarm": {
                    "type": "boolean"
                },
                "Time": {
                    "type": "integer"
                },
                "TotalCPU": {
                    "type": "integer"
                },
                "TotalMemory": {
                    "type": "integer"
                },
                "UnhealthyContainerCount": {
                    "type": "integer"
                },
                "VolumeCount": {
                    "type": "integer"
                }
            }
        },
        "portainer.DockerSnapshotRaw": {
            "type": "object",
            "properties": {
                "Containers": {
                    "type": "object"
                },
                "Images": {
                    "type": "object"
                },
                "Info": {
                    "type": "object"
                },
                "Networks": {
                    "type": "object"
                },
                "Version": {
                    "type": "object"
                },
                "Volumes": {
                    "type": "object"
                }
            }
        },
        "portainer.EdgeGroup": {
            "type": "object",
            "properties": {
                "Dynamic": {
                    "type": "boolean"
                },
                "Endpoints": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "PartialMatch": {
                    "type": "boolean"
                },
                "TagIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "portainer.EdgeJob": {
            "type": "object",
            "properties": {
                "Created": {
                    "type": "integer"
                },
                "CronExpression": {
                    "type": "string"
                },
                "Endpoints": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/portainer.EdgeJobEndpointMeta"
                    }
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Recurring": {
                    "type": "boolean"
                },
                "ScriptPath": {
                    "type": "string"
                },
                "Version": {
                    "type": "integer"
                }
            }
        },
        "portainer.EdgeJobEndpointMeta": {
            "type": "object",
            "properties": {
                "collectLogs": {
                    "type": "boolean"
                },
                "logsStatus": {
                    "type": "integer"
                }
            }
        },
        "portainer.EdgeStack": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "type": "integer"
                },
                "EdgeGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "EntryPoint": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ProjectPath": {
                    "type": "string"
                },
                "Prune": {
                    "type": "boolean"
                },
                "Status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/portainer.EdgeStackStatus"
                    }
                },
                "Version": {
                    "type": "integer"
                }
            }
        },
        "portainer.EdgeStackStatus": {
            "type": "object",
            "properties": {
                "EndpointID": {
                    "type": "integer"
                },
                "Error": {
                    "type": "string"
                },
                "Type": {
                    "type": "integer"
                }
            }
        },
        "portainer.Endpoint": {
            "type": "object",
            "properties": {
                "AuthorizedTeams": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AuthorizedUsers": {
                    "description": "Deprecated in DBVersion == 18",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AzureCredentials": {
                    "$ref": "#/definitions/portainer.AzureCredentials"
                },
                "EdgeCheckinInterval": {
                    "type": "integer"
                },
                "EdgeID": {
                    "type": "string"
                },
                "EdgeKey": {
                    "type": "string"
                },
                "Extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.EndpointExtension"
                    }
                },
                "GroupId": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "Kubernetes": {
                    "$ref": "#/definitions/portainer.KubernetesData"
                },
                "Name": {
                    "type": "string"
                },
                "PublicURL": {
                    "type": "string"
                },
                "Snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.DockerSnapshot"
                    }
                },
                "Status": {
                    "type": "integer"
                },
                "TLS": {
                    "description": "Deprecated fields\nDeprecated in DBVersion == 4",
                    "type": "boolean"
                },
                "TLSCACert": {
                    "type": "string"
                },
                "TLSCert": {
                    "type": "string"
                },
                "TLSConfig": {
                    "$ref": "#/definitions/portainer.TLSConfiguration"
                },
                "TLSKey": {
                    "type": "string"
                },
                "TagIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Tags": {
                    "description": "Deprecated in DBVersion == 22",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TeamAccessPolicies": {
                    "$ref": "#/definitions/portainer.TeamAccessPolicies"
                },
                "Type": {
                    "type": "integer"
                },
                "URL": {
                    "type": "string"
                },
                "UserAccessPolicies": {
                    "$ref": "#/definitions/portainer.UserAccessPolicies"
                }
            }
        },
        "portainer.EndpointExtension": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "integer"
                },
                "URL": {
                    "type": "string"
                }
            }
        },
        "portainer.EndpointGroup": {
            "type": "object",
            "properties": {
                "AuthorizedTeams": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AuthorizedUsers": {
                    "description": "Deprecated in DBVersion == 18",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Labels": {
                    "description": "Deprecated fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.Pair"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "TagIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Tags": {
                    "description": "Deprecated in DBVersion == 22",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TeamAccessPolicies": {
                    "$ref": "#/definitions/portainer.TeamAccessPolicies"
                },
                "UserAccessPolicies": {
                    "$ref": "#/definitions/portainer.UserAccessPolicies"
                }
            }
        },
        "portainer.GitlabRegistryData": {
            "type": "object",
            "properties": {
                "InstanceURL": {
                    "type": "string"
                },
                "ProjectId": {
                    "type": "integer"
                },
                "ProjectPath": {
                    "type": "string"
                }
            }
        },
        "portainer.KubernetesConfiguration": {
            "type": "object",
            "properties": {
                "IngressClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.KubernetesIngressClassConfig"
                    }
                },
                "StorageClasses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.KubernetesStorageClassConfig"
                    }
                },
                "UseLoadBalancer": {
                    "type": "boolean"
                },
                "UseServerMetrics": {
                    "type": "boolean"
                }
            }
        },
        "portainer.KubernetesData": {
            "type": "object",
            "properties": {
                "Configuration": {
                    "$ref": "#/definitions/portainer.KubernetesConfiguration"
                },
                "Snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.KubernetesSnapshot"
                    }
                }
            }
        },
        "portainer.KubernetesIngressClassConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "portainer.KubernetesSnapshot": {
            "type": "object",
            "properties": {
                "KubernetesVersion": {
                    "type": "string"
                },
                "NodeCount": {
                    "type": "integer"
                },
                "Time": {
                    "type": "integer"
                },
                "TotalCPU": {
                    "type": "integer"
                },
                "TotalMemory": {
                    "type": "integer"
                }
            }
        },
        "portainer.KubernetesStorageClassConfig": {
            "type": "object",
            "properties": {
                "AccessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "AllowVolumeExpansion": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Provisioner": {
                    "type": "string"
                }
            }
        },
        "portainer.LDAPGroupSearchSettings": {
            "type": "object",
            "properties": {
                "GroupAttribute": {
                    "type": "string"
                },
                "GroupBaseDN": {
                    "type": "string"
                },
                "GroupFilter": {
                    "type": "string"
                }
            }
        },
        "portainer.LDAPSearchSettings": {
            "type": "object",
            "properties": {
                "BaseDN": {
                    "type": "string"
                },
                "Filter": {
                    "type": "string"
                },
                "UserNameAttribute": {
                    "type": "string"
                }
            }
        },
        "portainer.LDAPSettings": {
            "type": "object",
            "properties": {
                "AnonymousMode": {
                    "type": "boolean"
                },
                "AutoCreateUsers": {
                    "type": "boolean"
                },
                "GroupSearchSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.LDAPGroupSearchSettings"
                    }
                },
                "Password": {
                    "type": "string"
                },
                "ReaderDN": {
                    "type": "string"
                },
                "SearchSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.LDAPSearchSettings"
                    }
                },
                "StartTLS": {
                    "type": "boolean"
                },
                "TLSConfig": {
                    "$ref": "#/definitions/portainer.TLSConfiguration"
                },
                "URL": {
                    "type": "string"
                }
            }
        },
        "portainer.OAuthSettings": {
            "type": "object",
            "properties": {
                "AccessTokenURI": {
                    "type": "string"
                },
                "AuthorizationURI": {
                    "type": "string"
                },
                "ClientID": {
                    "type": "string"
                },
                "ClientSecret": {
                    "type": "string"
                },
                "DefaultTeamID": {
                    "type": "integer"
                },
                "OAuthAutoCreateUsers": {
                    "type": "boolean"
                },
                "RedirectURI": {
                    "type": "string"
                },
                "ResourceURI": {
                    "type": "string"
                },
                "Scopes": {
                    "type": "string"
                },
                "UserIdentifier": {
                    "type": "string"
                }
            }
        },
        "portainer.Pair": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "portainer.Registry": {
            "type": "object",
            "properties": {
                "Authentication": {
                    "type": "boolean"
                },
                "AuthorizedTeams": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AuthorizedUsers": {
                    "description": "Deprecated fields\nDeprecated in DBVersion == 18",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Gitlab": {
                    "$ref": "#/definitions/portainer.GitlabRegistryData"
                },
                "Id": {
                    "type": "integer"
                },
                "ManagementConfiguration": {
                    "$ref": "#/definitions/portainer.RegistryManagementConfiguration"
                },
                "Name": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "TeamAccessPolicies": {
                    "$ref": "#/definitions/portainer.TeamAccessPolicies"
                },
                "Type": {
                    "type": "integer"
                },
                "URL": {
                    "type": "string"
                },
                "UserAccessPolicies": {
                    "$ref": "#/definitions/portainer.UserAccessPolicies"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "portainer.RegistryManagementConfiguration": {
            "type": "object",
            "properties": {
                "Authentication": {
                    "type": "boolean"
                },
                "Password": {
                    "type": "string"
                },
                "TLSConfig": {
                    "$ref": "#/definitions/portainer.TLSConfiguration"
                },
                "Type": {
                    "type": "integer"
                },
                "Username": {
                    "type": "string"
                }
            }
        },
        "portainer.ResourceControl": {
            "type": "object",
            "properties": {
                "AccessLevel": {
                    "type": "integer"
                },
                "AdministratorsOnly": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer"
                },
                "OwnerId": {
                    "description": "Deprecated fields\nDeprecated in DBVersion == 2",
                    "type": "integer"
                },
                "Public": {
                    "type": "boolean"
                },
                "ResourceId": {
                    "type": "string"
                },
                "SubResourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "System": {
                    "type": "boolean"
                },
                "TeamAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.TeamResourceAccess"
                    }
                },
                "Type": {
                    "type": "integer"
                },
                "UserAccesses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.UserResourceAccess"
                    }
                }
            }
        },
        "portainer.Role": {
            "type": "object",
            "properties": {
                "Authorizations": {
                    "$ref": "#/definitions/portainer.Authorizations"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Priority": {
                    "type": "integer"
                }
            }
        },
        "portainer.Settings": {
            "type": "object",
            "properties": {
                "AllowBindMountsForRegularUsers": {
                    "type": "boolean"
                },
                "AllowContainerCapabilitiesForRegularUsers": {
                    "type": "boolean"
                },
                "AllowDeviceMappingForRegularUsers": {
                    "type": "boolean"
                },
                "AllowHostNamespaceForRegularUsers": {
                    "type": "boolean"
                },
                "AllowPrivilegedModeForRegularUsers": {
                    "type": "boolean"
                },
                "AllowStackManagementForRegularUsers": {
                    "type": "boolean"
                },
                "AllowVolumeBrowserForRegularUsers": {
                    "type": "boolean"
                },
                "AuthenticationMethod": {
                    "type": "integer"
                },
                "BlackListedLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.Pair"
                    }
                },
                "EdgeAgentCheckinInterval": {
                    "type": "integer"
                },
                "EnableEdgeComputeFeatures": {
                    "type": "boolean"
                },
                "EnableHostManagementFeatures": {
                    "type": "boolean"
                },
                "EnableTelemetry": {
                    "type": "boolean"
                },
                "LDAPSettings": {
                    "$ref": "#/definitions/portainer.LDAPSettings"
                },
                "LogoURL": {
                    "type": "string"
                },
                "OAuthSettings": {
                    "$ref": "#/definitions/portainer.OAuthSettings"
                },
                "SnapshotInterval": {
                    "type": "string"
                },
                "TemplatesURL": {
                    "type": "string"
                },
                "UserSessionTimeout": {
                    "type": "string"
                },
                "displayDonationHeader": {
                    "description": "Deprecated fields",
                    "type": "boolean"
                },
                "displayExternalContributors": {
                    "type": "boolean"
                }
            }
        },
        "portainer.Status": {
            "type": "object",
            "properties": {
                "Version": {
                    "type": "string"
                }
            }
        },
        "portainer.TLSConfiguration": {
            "type": "object",
            "properties": {
                "TLS": {
                    "type": "boolean"
                },
                "TLSCACert": {
                    "type": "string"
                },
                "TLSCert": {
                    "type": "string"
                },
                "TLSKey": {
                    "type": "string"
                },
                "TLSSkipVerify": {
                    "type": "boolean"
                }
            }
        },
        "portainer.Tag": {
            "type": "object",
            "properties": {
                "EndpointGroups": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "Endpoints": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "Name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "portainer.TeamAccessPolicies": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/portainer.AccessPolicy"
            }
        },
        "portainer.TeamMembership": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "Role": {
                    "type": "integer"
                },
                "TeamID": {
                    "type": "integer"
                },
                "UserID": {
                    "type": "integer"
                }
            }
        },
        "portainer.TeamResourceAccess": {
            "type": "object",
            "properties": {
                "AccessLevel": {
                    "type": "integer"
                },
                "TeamId": {
                    "type": "integer"
                }
            }
        },
        "portainer.Template": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Mandatory container/stack fields",
                    "type": "integer"
                },
                "administrator_only": {
                    "type": "boolean"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.TemplateEnv"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "image": {
                    "description": "Mandatory container fields",
                    "type": "string"
                },
                "interactive": {
                    "type": "boolean"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.Pair"
                    }
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "description": "Optional stack/container fields",
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privileged": {
                    "type": "boolean"
                },
                "registry": {
                    "description": "Optional container fields",
                    "type": "string"
                },
                "repository": {
                    "description": "Mandatory stack fields",
                    "$ref": "#/definitions/portainer.TemplateRepository"
                },
                "restart_policy": {
                    "type": "string"
                },
                "stackFile": {
                    "description": "Mandatory Edge stack fields",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.TemplateVolume"
                    }
                }
            }
        },
        "portainer.TemplateEnv": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preset": {
                    "type": "boolean"
                },
                "select": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.TemplateEnvSelect"
                    }
                }
            }
        },
        "portainer.TemplateEnvSelect": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "portainer.TemplateRepository": {
            "type": "object",
            "properties": {
                "stackfile": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "portainer.TemplateVolume": {
            "type": "object",
            "properties": {
                "bind": {
                    "type": "string"
                },
                "container": {
                    "type": "string"
                },
                "readonly": {
                    "type": "boolean"
                }
            }
        },
        "portainer.UserAccessPolicies": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/portainer.AccessPolicy"
            }
        },
        "portainer.UserResourceAccess": {
            "type": "object",
            "properties": {
                "AccessLevel": {
                    "type": "integer"
                },
                "UserId": {
                    "type": "integer"
                }
            }
        },
        "registries.registryConfigurePayload": {
            "type": "object",
            "properties": {
                "authentication": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "tls": {
                    "type": "boolean"
                },
                "tlscacertFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlscertFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlskeyFile": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tlsskipVerify": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "registries.registryCreatePayload": {
            "type": "object",
            "properties": {
                "authentication": {
                    "type": "boolean"
                },
                "gitlab": {
                    "$ref": "#/definitions/portainer.GitlabRegistryData"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "registries.registryUpdatePayload": {
            "type": "object",
            "properties": {
                "authentication": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "teamAccessPolicies": {
                    "$ref": "#/definitions/portainer.TeamAccessPolicies"
                },
                "url": {
                    "type": "string"
                },
                "userAccessPolicies": {
                    "$ref": "#/definitions/portainer.UserAccessPolicies"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "resourcecontrols.resourceControlCreatePayload": {
            "type": "object",
            "properties": {
                "administratorsOnly": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "resourceID": {
                    "type": "string"
                },
                "subResourceIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "type": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "resourcecontrols.resourceControlUpdatePayload": {
            "type": "object",
            "properties": {
                "administratorsOnly": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "settings.publicSettingsResponse": {
            "type": "object",
            "properties": {
                "AllowBindMountsForRegularUsers": {
                    "type": "boolean"
                },
                "AllowContainerCapabilitiesForRegularUsers": {
                    "type": "boolean"
                },
                "AllowDeviceMappingForRegularUsers": {
                    "type": "boolean"
                },
                "AllowHostNamespaceForRegularUsers": {
                    "type": "boolean"
                },
                "AllowPrivilegedModeForRegularUsers": {
                    "type": "boolean"
                },
                "AllowStackManagementForRegularUsers": {
                    "type": "boolean"
                },
                "AllowVolumeBrowserForRegularUsers": {
                    "type": "boolean"
                },
                "AuthenticationMethod": {
                    "type": "integer"
                },
                "EnableEdgeComputeFeatures": {
                    "type": "boolean"
                },
                "EnableHostManagementFeatures": {
                    "type": "boolean"
                },
                "EnableTelemetry": {
                    "type": "boolean"
                },
                "LogoURL": {
                    "type": "string"
                },
                "OAuthLoginURI": {
                    "type": "string"
                }
            }
        },
        "settings.settingsLDAPCheckPayload": {
            "type": "object",
            "properties": {
                "ldapsettings": {
                    "$ref": "#/definitions/portainer.LDAPSettings"
                }
            }
        },
        "settings.settingsUpdatePayload": {
            "type": "object",
            "properties": {
                "allowBindMountsForRegularUsers": {
                    "type": "boolean"
                },
                "allowContainerCapabilitiesForRegularUsers": {
                    "type": "boolean"
                },
                "allowDeviceMappingForRegularUsers": {
                    "type": "boolean"
                },
                "allowHostNamespaceForRegularUsers": {
                    "type": "boolean"
                },
                "allowPrivilegedModeForRegularUsers": {
                    "type": "boolean"
                },
                "allowStackManagementForRegularUsers": {
                    "type": "boolean"
                },
                "allowVolumeBrowserForRegularUsers": {
                    "type": "boolean"
                },
                "authenticationMethod": {
                    "type": "integer"
                },
                "blackListedLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portainer.Pair"
                    }
                },
                "edgeAgentCheckinInterval": {
                    "type": "integer"
                },
                "enableEdgeComputeFeatures": {
                    "type": "boolean"
                },
                "enableHostManagementFeatures": {
                    "type": "boolean"
                },
                "enableTelemetry": {
                    "type": "boolean"
                },
                "ldapsettings": {
                    "$ref": "#/definitions/portainer.LDAPSettings"
                },
                "logoURL": {
                    "type": "string"
                },
                "oauthSettings": {
                    "$ref": "#/definitions/portainer.OAuthSettings"
                },
                "snapshotInterval": {
                    "type": "string"
                },
                "templatesURL": {
                    "type": "string"
                },
                "userSessionTimeout": {
                    "type": "string"
                }
            }
        },
        "status.inspectVersionResponse": {
            "type": "object",
            "properties": {
                "LatestVersion": {
                    "type": "string"
                },
                "UpdateAvailable": {
                    "type": "boolean"
                }
            }
        },
        "tags.tagCreatePayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "teammemberships.teamMembershipCreatePayload": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "integer"
                },
                "teamID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "teammemberships.teamMembershipUpdatePayload": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "integer"
                },
                "teamID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "PortainerCE",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
